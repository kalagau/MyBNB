//ADDR

create table address (
address_id int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
pCode varchar(255) NOT NULL, 
country VARCHAR(255) NOT NULL, 
city VARCHAR(255) NOT NULL,
CHECK(CHAR_LENGTH(pCode) >= 2 AND CHAR_LENGTH(pCode) <= 10)) ENGINE INNODB;

delimiter |
CREATE TRIGGER addressIns BEFORE INSERT ON address
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF CHAR_LENGTH(NEW.pCode) <= 2 OR CHAR_LENGTH(NEW.pCode) >= 10 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


>>delimiter |
CREATE TRIGGER addressUpd BEFORE UPDATE ON address
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF CHAR_LENGTH(NEW.pCode) <= 2 OR CHAR_LENGTH(NEW.pCode) >= 10 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;



//CreditCard

create table credit_card (
card_number BIGINT NOT NULL PRIMARY KEY,
name VARCHAR(255) NOT NULL,
CCV INT NOT NULL,
expiry_date DATE NOT NULL,
CHECK(CCV > 0 AND CCV <= 9999),
check(expiry_date >= CURDATE()), 
check(card_number>=100000000000 and card_number <= 9999999999999999999 )) ENGINE INNODB;

delimiter |
CREATE TRIGGER credit_cardIns BEFORE INSERT ON credit_card
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.CCV <= 0 OR NEW.CCV > 9999 OR NEW.expiry_date < CURDATE() OR NEW.card_number < 1000000000000 OR NEW.card_number > 9999999999999999999 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER credit_cardUpd BEFORE UPDATE ON credit_card
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.CCV <= 0 OR NEW.CCV > 9999 OR NEW.expiry_date < CURDATE() OR NEW.card_number < 1000000000000 OR NEW.card_number > 9999999999999999999 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;


//Location

create table location (
location_id int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
latitude DECIMAL(10,6) NOT NULL,
longitude DECIMAL(10,6) NOT NULL,
CHECK(longitude >= -180 AND longitude <= 180),
CHECK(latitude >= -90 AND latitude <= 90)) ENGINE INNODB;

delimiter |
CREATE TRIGGER locationIns BEFORE INSERT ON location
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.longitude < -180 OR NEW.longitude > 180 OR NEW.latitude < -90 OR NEW.latitude > 90 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER locationUpd BEFORE UPDATE ON location
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.longitude < -180 OR NEW.longitude > 180 OR NEW.latitude < -90 OR NEW.latitude > 90 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;





//USer

create table user (
user_id int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
address_id int(50) NOT NULL,
FOREIGN KEY (address_id) REFERENCES address(address_id), 
occupation varchar(255) NOT NULL,
name varchar(255) NOT NULL, 
DOB DATE NOT NULL, 
SIN INT(9) NOT NULL,
CHECK(DOB < DATE_SUB(CURDATE(), INTERVAL 18 YEAR)), 
CHECK(SIN > 100000000 AND SIN <= 999999999)) ENGINE INNODB;

delimiter |
CREATE TRIGGER userIns BEFORE INSERT ON user
FOR EACH ROW BEGIN	
DECLARE msg varchar(255);
IF NEW.DOB >= DATE_SUB(CURDATE(), INTERVAL 18 YEAR) OR NEW.SIN < 100000000  OR NEW.SIN > 999999999 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER userUpd BEFORE UPDATE ON user
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.DOB >= DATE_SUB(CURDATE(), INTERVAL 18 YEAR) OR NEW.SIN < 100000000  OR NEW.SIN > 999999999 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;

//HOST


create table host (
user_id int(50) NOT NULL,
FOREIGN KEY (user_id) REFERENCES user(user_id),
PRIMARY KEY(user_id),
isActive BOOLEAN NOT NULL) ENGINE INNODB;

//renter


create table  renter(
user_id int(50) NOT NULL,
card_number BIGINT NOT NULL,
FOREIGN KEY (user_id) REFERENCES user(user_id),
FOREIGN KEY (card_number) REFERENCES credit_card(card_number),
PRIMARY KEY(user_id),
isActive BOOLEAN NOT NULL) ENGINE INNODB;

//Listing

create table listing (listing_id int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
isActive BOOLEAN NOT NULL DEFAULT '1',
user_id int(50) NOT NULL ,
location_id int(50) NOT NULL ,
address_id int(50) NOT NULL ,
FOREIGN KEY (location_id) REFERENCES location(location_id) ,
FOREIGN KEY (address_id) REFERENCES address(address_id) ,
type varchar(255) NOT NULL DEFAULT 0,
FOREIGN KEY (user_id) REFERENCES host(user_id) ,
num_bedrooms int(1) NOT NULL ,
Kitchen BOOLEAN NOT NULL DEFAULT 0,
Internet BOOLEAN NOT NULL DEFAULT 0, 
TV BOOLEAN NOT NULL DEFAULT 0,
Essentials BOOLEAN NOT NULL DEFAULT 0,
Shampoo BOOLEAN NOT NULL DEFAULT 0,
Heating BOOLEAN NOT NULL DEFAULT 0,
Air_Conditioning BOOLEAN NOT NULL DEFAULT 0,
Washer BOOLEAN NOT NULL DEFAULT 0,
Dryer BOOLEAN NOT NULL DEFAULT 0,
Free_Parking BOOLEAN NOT NULL DEFAULT 0,
Wireless_Internet BOOLEAN NOT NULL DEFAULT 0,
Cable_TV BOOLEAN NOT NULL DEFAULT 0,
Breakfast BOOLEAN NOT NULL DEFAULT 0,
Pets_Allowed BOOLEAN NOT NULL DEFAULT 0,
Family_Friendly BOOLEAN NOT NULL DEFAULT 0,
Suitable_Events BOOLEAN NOT NULL DEFAULT 0,
Smoking_Allowed BOOLEAN NOT NULL DEFAULT 0,
Wheelchair_Accessible BOOLEAN NOT NULL DEFAULT 0,
Elevator_Building BOOLEAN NOT NULL DEFAULT 0,
Indoor_Fireplace BOOLEAN NOT NULL DEFAULT 0,
Buzzer BOOLEAN NOT NULL DEFAULT 0,
Doorman BOOLEAN NOT NULL DEFAULT 0,
Pool BOOLEAN NOT NULL DEFAULT 0,
Hot_Tub BOOLEAN NOT NULL DEFAULT 0,
Gym BOOLEAN NOT NULL DEFAULT 0,
24Hour_Checkin BOOLEAN NOT NULL DEFAULT 0, 
Hangers BOOLEAN NOT NULL DEFAULT 0,
Iron BOOLEAN NOT NULL DEFAULT 0,
Hair_Dryer BOOLEAN NOT NULL DEFAULT 0, 
Laptop_Workspace BOOLEAN NOT NULL DEFAULT 0,
CHECK(type IN ('full house','room','apartment')), 
CHECK(num_bedrooms > 0 AND num_bedrooms < 25 )) ENGINE INNODB;

delimiter |
CREATE TRIGGER listingIns BEFORE INSERT ON listing
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.type NOT IN ('full house','room','apartment') OR NEW.num_bedrooms <= 0  OR NEW.num_bedrooms > 25 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER listingUpd BEFORE UPDATE ON listing
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.type NOT IN ('full house','room','apartment') OR NEW.num_bedrooms <= 0  OR NEW.num_bedrooms >= 25 THEN	
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;


//Calendar

create table calendar_entry (
listing_id int(50) NOT NULL,
FOREIGN KEY (listing_id) REFERENCES listing(listing_id),
isAvailable BOOLEAN NOT NULL DEFAULT '1',
price DECIMAL(6,2) NOT NULL,
date DATE NOT NULL,
PRIMARY KEY(listing_id,date),
CHECK(price >= 0 AND date>CURDATE())) ENGINE INNODB;

delimiter |
CREATE TRIGGER calendar_entryIns BEFORE INSERT ON calendar_entry
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.price < 0 OR NEW.date<CURDATE()THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER calendar_entryUpd BEFORE UPDATE ON calendar_entry
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.price < 0 OR   NEW.date<CURDATE() THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;

//RENTAL


create table rental (
rental_id int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
user_id int(50) NOT NULL,
cancelled_By int(1) NOT NULL DEFAULT 0,
listing_id int(50) NOT NULL,
FOREIGN KEY (user_id) REFERENCES renter(user_id),
FOREIGN KEY (listing_id) REFERENCES listing(listing_id),
start_date DATE NOT NULL,
end_date DATE NOT NULL,
CHECK(start_date  <= end_date),
CHECK(cancelled_By>= 0 and  cancelled_By <=2),

) ENGINE INNODB;

delimiter |
CREATE TRIGGER rentalIns BEFORE INSERT ON rental
FOR EACH ROW BEGIN	
DECLARE msg varchar(255);
IF NEW.start_date  > NEW.end_date OR cancelled_By< 0 OR  cancelled_By > 2 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER rentalUpd BEFORE UPDATE ON rental
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.start_date  > NEW.end_date OR cancelled_By< 0 OR  cancelled_By > 2 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;


//Review



create table review (
review_id int(50) NOT NULL AUTO_INCREMENT PRIMARY KEY,
host_id int(50),
listing_id int(50),
renter_id int(50) NOT NULL,
FOREIGN KEY (renter_id) REFERENCES renter(user_id),
FOREIGN KEY (host_id) REFERENCES host(user_id),
FOREIGN KEY (listing_id) REFERENCES listing(listing_id),
rating INT(1) NOT NULL, 
description VARCHAR(1000) NOT NULL, 
type INT(1) NOT NULL,
CHECK(type >=1 and type<=3),
CHECK(rating >=1 and rating <=5)) ENGINE INNODB;



delimiter |
CREATE TRIGGER reviewIns BEFORE INSERT ON review
FOR EACH ROW BEGIN	
DECLARE msg varchar(255);
IF NEW.rating < 1  OR  NEW.rating > 5 OR NEW.type < 1  OR  NEW.type > 3 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45000' set message_text = msg;
END IF;
END 
|
delimiter ;


delimiter |
CREATE TRIGGER reviewUpd BEFORE UPDATE ON review
FOR EACH ROW BEGIN
DECLARE msg varchar(255);
IF NEW.rating < 1  OR  NEW.rating > 5 OR NEW.type < 1  OR  NEW.type > 3 THEN
SET msg = 'Constraints violated!';
SIGNAL sqlstate '45001' set message_text = msg;
END IF;
END
|
delimiter ;









